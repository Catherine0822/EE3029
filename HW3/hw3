1. program.cs
using System;

namespace HW3
{
    class Program
    {
        static void Main(string[] args)
        {
            WordtoCode Q = new WordtoCode();
            Q.run();         
           
            Console.WriteLine('\n'+"press enter to continue");
            Console.ReadLine();
        }

    }
}
RepKey
using System;

namespace HW3
{
    public class RepKey 
    {       
        public static string repkey(string word,string key)
        {
            System.Text.StringBuilder key1 = new System.Text.StringBuilder(key);
            for (int i=0; i<word.Length; i++)
                {   
                key1.Append(key);
                }
            return(key1.ToString());
        }

    }
}
2. IfError.cs
using System;

namespace HW3
{
    public class IfError
    {
        
        public static bool iferror(byte[] a) 
        {            
            for (int j =0; j< a.Length; j++)
            {
                if ((a[j]>64 && a[j]<91) || (a[j]>96 && a[j]<123))
                {
                   continue; //處理非英文字母                   
                }
                else 
                {
                    return false;
                }           
            }
            return true;
        }

        public static bool iferrorKEY(byte[] a) 
        {            
            for (int j =0; j< a.Length; j++)
            {
                if ((a[j]>64 && a[j]<91) || (a[j]>96 && a[j]<123) || (a[j]>47 && a[j]<58))
                {
                   continue; //處理非英文字母                   
                }
                else 
                {
                    return false;
                }           
            }
            return true;
        }

    }
}
3. ASCII.cs
using System;

namespace HW3
{
    public class ASCII 
    {

        public static byte[] ToASCII( string word) //將明文轉為ASCII
        {
            byte[] ascii = new byte[word.Length];
            for (int i=0; i< word.Length; i++){
                //Console.WriteLine (chars[i]);
                char[] chars = word.ToCharArray(); 
                ascii[i] = Convert.ToByte(chars[i]);
                }
            return ascii;
        }

        public static byte[] KeyToASCII(string word)//將KEY轉為ASCII
        {
            byte[] ascii1 = new byte[word.Length];
            for (int i=0; i< word.Length; i++){
                //Console.WriteLine (chars[i]);       
                ascii1[i] = Convert.ToByte(word[i]);
                if (ascii1[i]>96){  //因為KEY跟大小寫沒有關係，所以做此處理
                    ascii1[i]-= 97;  //將不論大寫還是小寫都改為a=1開始
                    }
                else if (ascii1[i]>64 && ascii1[i]<91)
                {
                    ascii1[i]-=65;
                }
                else
                {
                    ascii1[i]-=48;
                }
            }
        return ascii1;
        }
    }
}
4. WordtoCode.cs
using System;

namespace HW3
{
    public class WordtoCode
    {
        private bool e;    
        private bool r ;
        protected string b ;
        protected string a ;
        private char op;

        private byte[] ascii1; 
        private byte[] ascii2; 
        
        private char[] code ;

        public void Encrypt () 
         {
            code = new char[ascii1.Length];
            for (int j =0; j< ascii1.Length; j++){
                if (ascii1[j]>96 && ascii1[j]<123){ 
                    code[j] = Convert.ToChar(((ascii1[j]-96+ascii2[j])%26)+96);
                    } //處理小寫英文字母
                else if (ascii1[j]>64 && ascii1[j]<91){
                    code[j] = Convert.ToChar(((ascii1[j]-64+ascii2[j])%26)+64);
                    } //處理大寫英文字母
                }    
         }
        public void Decrypt () 
         {
            code = new char[ascii1.Length];
            for (int j =0; j< ascii1.Length; j++){
                    if (ascii1[j]>96 && ascii1[j]<123)
                    { 
                    code[j] = Convert.ToChar(((ascii1[j]-96-ascii2[j]+26)%26)+96);
                    } //處理小寫英文字母
                     else if (ascii1[j]>64 && ascii1[j]<91)
                    {
                    code[j] = Convert.ToChar(((ascii1[j]-64-ascii2[j]+26)%26)+64);
                    } //處理大寫英文字母 
                }                   
            } 

        public void run()
        {            
            Console.WriteLine("加密請按A,解密請按B");  //輸入加密或解密
            op = Convert.ToChar(Console.ReadLine()) ;
            
            while(e==false) //檢查輸入的字串中是否含有非英文字的符號，若有則重新輸入
            {
            Console.WriteLine("請輸入一些英文字母");
            a = Console.ReadLine() ;
            ascii1 = ASCII.ToASCII(a);
            e = IfError.iferror(ascii1);
            }                                                          
           
            while(r==false)  //檢查Key中是否含有非英文字的符號，若有則重新輸入
            {
            Console.WriteLine("請輸入任一長度的英文字母或數字"); 
            b = Console.ReadLine();
            ascii2 = ASCII.KeyToASCII(RepKey.repkey(a,b)); //呼叫涵式repkey將key重複至與明文一樣長
            r = IfError.iferrorKEY(ASCII.ToASCII(b));
            }
            
            switch(op)
            {
                case 'A':
                    Encrypt ();
                    break;
                case 'B':
                    Decrypt ();
                    break;
                default:
                    Console.WriteLine("error!!!!");
                    break;
            }

            Console.Write("Vigenère Cipher = ");
            for(int i = 0; i< a.Length; i++)
                {   
                    Console.Write(code[i]);
                }
        }
    }
}
